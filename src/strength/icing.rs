//! –£—á–µ—Ç –æ–±–ª–µ–¥–µ–Ω–µ–Ω–∏—è

use std::rc::Rc;

use crate::{icing_stab::IIcingStab, Bound, Error};

/// –£—á–µ—Ç –æ–±–ª–µ–¥–µ–Ω–µ–Ω–∏—è —Å—É–¥–Ω–∞.
/// –ú–æ–∂–µ—Ç –±—ã—Ç—å –±–µ–∑ –æ–±–ª–µ–¥–µ–Ω–µ–Ω–∏—è, —á–∞—Å—Ç–∏—á–Ω—ã–º –∏ –ø–æ–ª–Ω—ã–º.  
/// –ü—Ä–∏ —Ä–∞—Å—á–µ—Ç–µ –æ–±–ª–µ–¥–µ–Ω–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —É—á–∏—Ç—ã–≤–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–æ–¥–æ–∏–∑–º–µ—â–µ–Ω–∏—è –∏  
/// –≤–æ–∑–≤—ã—à–µ–Ω–∏—è —Ü–µ–Ω—Ç—Ä–∞ —Ç—è–∂–µ—Å—Ç–∏. –ü—Ä–∏ —É—á–µ—Ç–µ –æ–±–ª–µ–¥–µ–Ω–µ–Ω–∏—è –∫ –º–∞—Å—Å–µ —Å—É–¥–Ω–∞ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è  
/// –º–∞—Å—Å–∞ –ª—å–¥–∞ –Ω–∞ –±–æ—Ä—Ç–∞—Ö, –ø–∞–ª—É–±–∞—Ö, –ø–∞–ª—É–±–Ω–æ–º –≥—Ä—É–∑–µ. –ú–∞—Å—Å–∞ –ª—å–¥–∞ –∏ –µ–≥–æ –º–æ–º–µ–Ω—Ç—ã,  
/// —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –¥–ª—è –æ—Å–∞–¥–∫–∏ ùëëùëöùëñùëõ –∏ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è—é—Ç—Å—è –Ω–∞ –≤—Å–µ —Å–ª—É—á–∞–∏ –∑–∞–≥—Ä—É–∑–∫–∏.
#[derive(Clone)]
pub struct IcingMass {
    /// –¢–∏–ø –æ–±–ª–µ–¥–µ–Ω–µ–Ω–∏—è —Å—É–¥–Ω–∞
    icing_stab: Rc<dyn IIcingStab>,
    /// –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–ª–æ—â–∞–¥–∏ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–µ–π
    area_strength: Rc<dyn crate::strength::IArea>,
}
//
impl IcingMass {
    /// –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
    /// * icing_stab - –¢–∏–ø –æ–±–ª–µ–¥–µ–Ω–µ–Ω–∏—è —Å—É–¥–Ω–∞
    /// * area_strength - –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–ª–æ—â–∞–¥–∏ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–µ–π
    pub fn new(
        icing_stab: Rc<dyn IIcingStab>,
        area_strength: Rc<dyn crate::strength::IArea>,
    ) -> Self {
        Self {
            icing_stab,
            area_strength,
        }
    }
}

impl IIcingMass for IcingMass {
    /// –ú–∞—Å—Å–∞ –ª—å–¥–∞ –ø–æ–ø–∞–¥–∞—é—â–∞—è –≤ Bound –∏–ª–∏ –≤—Å—è –µ—Å–ª–∏ Bound –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
    fn mass(&self, bound: &Bound) -> Result<f64, Error> {
        Ok(
            self.area_strength.area_h(bound)? * self.icing_stab.mass_desc_h()
                + self.area_strength.area_timber_h(bound)?
                    * (self.icing_stab.mass_timber_h() - self.icing_stab.mass_desc_h())
                + self.area_strength.area_v(bound)?
                    * (1. + self.icing_stab.coef_v_ds_area())
                    * self.icing_stab.mass_v(),
        )
    }
}
#[doc(hidden)]
pub trait IIcingMass {
    /// –ú–∞—Å—Å–∞ –ª—å–¥–∞ –ø–æ–ø–∞–¥–∞—é—â–∞—è –≤ Bound –∏–ª–∏ –≤—Å—è –µ—Å–ª–∏ Bound –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
    fn mass(&self, bound: &Bound) -> Result<f64, Error>;
}
// –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
#[doc(hidden)]
pub struct FakeIcingMass {
    mass: f64,
}
#[doc(hidden)]
#[allow(dead_code)]
impl FakeIcingMass {
    pub fn new(mass: f64) -> Self {
        Self { mass }
    }
}
#[doc(hidden)]
impl IIcingMass for FakeIcingMass {
    fn mass(&self, _: &Bound) -> Result<f64, Error> {
        Ok(self.mass)
    }
}
